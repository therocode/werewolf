package werewolf

//represents a stage in the day-cycle. one will be generated by roles that still has instances alive
//for example, if the current players still alive are: villager, werewolf, werewolf, seer
//then the roles villager, werewolf and seer will be asked to emit a DayCyclePhase
//in this case, probably only werewolf and seer will emit one since villagers have no night actions
type DayCyclePhase interface {
	start()
	handleCommand(player *Player, command string, args []string)
	end()
}

type GameState struct {
	dayNightIndex int
}

func (instance *Werewolf) NewGame(owner string) {
	instance.state = GameStateInvite
	instance.owner = owner
	instance.playerJoin(owner)
}

func (instance *Werewolf) startGame() {
	instance.state = GameStateDay
	//instance.irc.Privmsgf(channel, "Unknown command '%s'", command)
}
